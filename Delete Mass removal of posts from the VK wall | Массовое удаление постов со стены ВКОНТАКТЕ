(async () => {
  'use strict';

  if (!confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã –Ω–∞ —Å—Ç–µ–Ω–µ?')) return;

  let deleted = 0;
  const DELAY = 300;       // –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–ª–∏–∫–∞–º–∏ (–º—Å)
  const SCROLL_DELAY = 800; // –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

  function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  async function deletePostsBatch() {
    const menuIcons = Array.from(document.querySelectorAll('svg.vkuiIcon--more_horizontal_24'));
    if (menuIcons.length === 0) return false;

    for (const icon of menuIcons) {
      let btn = icon.closest('[role="button"]') || icon.parentElement;
      btn.click();
      await sleep(DELAY);

      const deleteSpan = Array.from(document.querySelectorAll('span.vkitTextClamp__root--23kcq'))
        .find(el => el.textContent.trim() === '–£–¥–∞–ª–∏—Ç—å');

      if (deleteSpan) {
        deleteSpan.closest('div, button').click();
        await sleep(DELAY);

        const confirmBtn = document.querySelector('button[class*="Button"][class*="danger"]');
        if (confirmBtn) {
          confirmBtn.click();
          deleted++;
          console.log(üóë –£–¥–∞–ª–µ–Ω–æ: ${deleted});
          await sleep(DELAY);
        } else {
          console.warn('–ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
      } else {
        console.warn('–ü—É–Ω–∫—Ç "–£–¥–∞–ª–∏—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –º–µ–Ω—é');
      }

      // –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∏–∫, –µ—Å–ª–∏ –º–µ–Ω—é –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      // document.body.click();
      await sleep(DELAY);
    }
    return true;
  }

  while (true) {
    window.scrollTo(0, document.body.scrollHeight);
    await sleep(SCROLL_DELAY);

    const hasPosts = await deletePostsBatch();
    if (!hasPosts) break;
  }

  console.log('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ: ' + deleted);
})();
